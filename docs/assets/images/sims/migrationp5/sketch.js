function preload(){}function getRandomColor(){for(var t="0123456789ABCDEF",e="#",i=0;i<6;i++)e+=t[Math.floor(16*Math.random())];return e}function randomIntFromInterval(t,e){return Math.floor(Math.random()*(e-t+1)+t)}function getRandomSubarray(t,e){let i,n,o=t.slice(0),r=t.length;for(;r--;)n=Math.floor((r+1)*Math.random()),i=o[n],o[n]=o[r],o[r]=i;return o.slice(0,e)}function generatePointsInCountry(t,e=3){let i=[],n=getBounds(t),o=0;for(;i.length<e&&o<100;){let e=random(n.minX,n.maxX),r=random(n.minY,n.maxY);isPointInPolygon(e,r,t)&&i.push(createVector(e,r)),o++}if(0===i.length){let e=getCentroid(t);i.push(e)}return i}function getBounds(t){let e=1/0,i=-1/0,n=1/0,o=-1/0;for(let r of t){let[t,s]=r;e=Math.min(e,t),i=Math.max(i,t),n=Math.min(n,s),o=Math.max(o,s)}return{minX:e,maxX:i,minY:n,maxY:o}}function getCentroid(t){let e=t.reduce(((t,e)=>{let[i,n]=e;return[t[0]+i,t[1]+n]}),[0,0]);return createVector(e[0]/t.length,e[1]/t.length)}function isPointInPolygon(t,e,i){let n=!1;for(let o=0,r=i.length-1;o<i.length;r=o++){let[s,l]=i[o],[a,h]=i[r];l>e!=h>e&&t<(a-s)*(e-l)/(h-l)+s&&(n=!n)}return n}function setup(){createCanvas(600,400),worldLayer=createGraphics(width,height),data=loadJSON("clean_countries.json",(()=>{countries=Object.keys(data);let t=[];for(let e of countries)if(poly=data[e],"ATA"!=e){let i=poly.map((t=>{let[e,i]=t;return[map(e,-150,180,10,width-10),map(i,-90,90,height-10,20)]}));polys.push([e,i]),countryPolygons.push({country:e,coords:i});let n=generatePointsInCountry(i,2);for(let o of n)t.push({point:o,country:e,coords:i});let o=getCentroid(i);centers.push(o)}selectOriginsAndDestinations(t),worldLayer.clear(),worldLayer.stroke(220,220,220,100),worldLayer.strokeWeight(.8);for(let t of polys){let[e,i]=t;worldLayer.beginShape();for(let t of i){let[e,i]=t;worldLayer.vertex(e,i)}let n=randomIntFromInterval(40,80),o=originPoints.some((t=>t.country===e)),r=destinationPoints.some((t=>t.country===e));o?worldLayer.fill(140,60,60,n):r?worldLayer.fill(60,120,80,n):worldLayer.fill(80,90,110,n),worldLayer.endShape(CLOSE)}dataReady=!0;for(let t=0;t<numParticles;t++)particles[t]=new AsylumSeeker;FlowField()}))}function selectOriginsAndDestinations(t){let e=getRandomSubarray(t,t.length),i={};for(let t of e)i[t.country]||(i[t.country]=[]),i[t.country].push(t);let n=Object.keys(i),o=getRandomSubarray(n,n.length);originPoints=[];for(let t=0;t<numOrigins&&t<o.length;t++){let e=o[t];originPoints=originPoints.concat(i[e])}destinationPoints=[];for(let t=numOrigins;t<numOrigins+numDestinations&&t<o.length;t++){let e=o[t];destinationPoints=destinationPoints.concat(i[e])}}function updateMigrationPatterns(){let t=[];for(let e of countryPolygons){let i=generatePointsInCountry(e.coords,2);for(let n of i)t.push({point:n,country:e.country,coords:e.coords})}selectOriginsAndDestinations(t),updateWorldMapColors();for(let t of particles)destinationPoints.length>0&&(t.target=int(random()*destinationPoints.length),t.destination=destinationPoints[t.target].point)}function updateWorldMapColors(){worldLayer.clear(),worldLayer.stroke(220,220,220,100),worldLayer.strokeWeight(.8);for(let t of polys){let[e,i]=t;worldLayer.beginShape();for(let t of i){let[e,i]=t;worldLayer.vertex(e,i)}let n=randomIntFromInterval(40,80),o=originPoints.some((t=>t.country===e)),r=destinationPoints.some((t=>t.country===e));o?worldLayer.fill(140,60,60,n):r?worldLayer.fill(60,120,80,n):worldLayer.fill(80,90,110,n),worldLayer.endShape(CLOSE)}}function draw(){if(dataReady){background(25,30,40),image(worldLayer,0,0),noStroke();for(let t=0;t<particles.length;t++)particles[t].show(),particles[t].seek(),particles[t].update(),particles[t].edge(),particles[t].follow();FlowField(),t>timeSteps?(updateMigrationPatterns(),t=0):t+=1,fill(255,200),textAlign(CENTER),textSize(16),text("Asylum Seekers",width/2,30),textSize(10),fill(255,150),text("Red: Origin regions | Green: Destination regions | Migration patterns update every "+Math.floor(timeSteps/60)+" seconds",width/2,height-15),fill(255,100),textAlign(LEFT),text("Pattern cycle: "+Math.floor(t/timeSteps*100)+"%",10,height-15)}}function FlowField(){xvec=floor((width+50)/scl),yvec=floor((height+50)/scl),flowfield=new Array(xvec*yvec);let t=0;for(let e=0;e<yvec;e++){let i=0;for(let n=0;n<xvec;n++){let o=noise(i,t,time)*TWO_PI,r=p5.Vector.fromAngle(o);flowfield[n+e*xvec]=r,i+=noiseInc,r.setMag(1.5)}t+=noiseInc,time+=2e-4}}let data,xvec,yvec,flowfield,worldLayer,polys=[],countries=[],originPoints=[],destinationPoints=[],numOrigins=8,numDestinations=12,t=0,centers=[],countryPolygons=[],scl=25,noiseInc=.08,time=0,particles=[],numParticles=200,timeSteps=1500,dataReady=!1;class AsylumSeeker{constructor(){if(originPoints.length>0){let t=random(originPoints);this.pos=createVector(t.point.x,t.point.y)}else{let t=random(centers);this.pos=createVector(t.x,t.y)}this.vel=createVector(0,0),this.acc=createVector(0,0),this.r=1.5,this.maxSpeed=random(1.5,2.5),this.seekForce=3,this.fieldForce=1,destinationPoints.length>0?(this.target=int(random()*destinationPoints.length),this.destination=destinationPoints[this.target].point):(this.target=int(random()*centers.length),this.destination=centers[this.target]),this.journeyType=random(["urgent","planned","family"]),this.trailLength=[],this.maxTrailLength=15}update(){this.trailLength.push(createVector(this.pos.x,this.pos.y)),this.trailLength.length>this.maxTrailLength&&this.trailLength.shift(),this.pos.add(this.vel),this.vel.add(this.acc),this.acc.mult(0),this.vel.limit(this.maxSpeed)}follow(){let t=constrain(floor(this.pos.x/scl),0,xvec-1),e=constrain(floor(this.pos.y/scl),0,yvec-1),i=flowfield[t+e*xvec];null!=i&&(i.setMag(this.fieldForce),this.applyForce(i))}applyForce(t){this.acc.add(t)}show(){for(let t=0;t<this.trailLength.length-1;t++){let e=map(t,0,this.trailLength.length-1,0,80);stroke(255,180,100,e),strokeWeight(.8),this.trailLength[t]&&this.trailLength[t+1]&&line(this.trailLength[t].x,this.trailLength[t].y,this.trailLength[t+1].x,this.trailLength[t+1].y)}noStroke(),"urgent"===this.journeyType?fill(255,120,120,180):"planned"===this.journeyType?fill(120,180,255,180):fill(180,255,120,180),ellipse(this.pos.x,this.pos.y,3)}edge(){this.pos.x<0&&(this.pos.x=width),this.pos.y<0&&(this.pos.y=height),this.pos.x>width&&(this.pos.x=0),this.pos.y>height&&(this.pos.y=0)}seek(){let t=p5.Vector.sub(this.destination,this.pos);t.setMag(this.maxSpeed);let e=p5.Vector.sub(t,this.vel);if(e.limit(this.seekForce),this.applyForce(e),this.pos.dist(this.destination)<8){if(random()<.3&&originPoints.length>0){let t=random(originPoints);this.pos=createVector(t.point.x,t.point.y),this.trailLength=[]}destinationPoints.length>0?(this.target=(this.target+1)%destinationPoints.length,this.destination=destinationPoints[this.target].point):centers.length>0&&(this.target=(this.target+1)%centers.length,this.destination=centers[this.target])}}}